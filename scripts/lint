#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const exceptions = {
    'src/cli.zig:35': true,
    'src/cli.zig:39': true,
};

var count_assert = 0;
var count_fn = 0;

function check(pathname) {
    if (/(^|\/)zig-cache/.test(pathname)) return;
    const stats = fs.statSync(pathname);
    if (stats.isDirectory()) {
        check_dir(pathname);
    } else if (stats.isFile() && /\.zig$/.test(pathname)) {
        check_file(pathname);
    }
}

function check_dir(dir) {
    fs.readdirSync(dir).forEach(function(file) {
        check(path.join(dir, file));
    });
}

function check_file(file) {
    const src = fs.readFileSync(file, 'utf-8');
    src.split('\n').forEach(function(line, line_index) {
        if (line.length > 100) {
            const file_line = file + ':' + (line_index + 1);
            if (exceptions.hasOwnProperty(file_line)) return;
            console.log(file_line + ' exceeds 100 columns');
        }
    });
    count_assert += src.split('assert(').length - 1;
    count_fn += src.split('fn ').length - 1;
}

check(process.argv[2] || '.');

const ratio = (count_assert / count_fn).toFixed(2);
console.log(`\nstats: assertions=${count_assert} functions=${count_fn} ratio=${ratio}`);
