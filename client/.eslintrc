{
  "extends": [
    "plugin:jest/recommended",
    "plugin:import/warnings",
    // "plugin:import/errors",
    "plugin:import/typescript",
    "standard-with-typescript"
  ],
  "plugins": [
    "jest",
    "import"
  ],
  "rules": {
    "eol-last": "warn",
    "no-multiple-empty-lines": ["warn", {"max": 1}],
    "lines-between-class-members": ["warn", "always", {"exceptAfterSingleLine": true}],
    "no-unneeded-ternary": "error",
    "no-nested-ternary":"warn",
    "prefer-object-spread": "warn",
    "import/no-default-export": "error",
    "import/newline-after-import": "warn"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "overrides": [
    {
      "files": "*.ts",
      "rules": {
        "semi": ["error","never"]
      }
    },
    {
      "files": "*.ts",
      "rules": {
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-use-before-define": "warn",
        "@typescript-eslint/camelcase": "warn",
        "@typescript-eslint/indent": ["error", 2],
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/explicit-member-accessibility": "off",
        // Note that `any` is potentially async so this can be noisy/misleading
        // This behavior is arguably a bug with @typescript-eslint
        // TODO: monitor updates/fixes to @typescript-eslint
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn"
      }
    },
    {
      "files": "*.test.ts",
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    {
      "files": "src/utils/encoding.ts",
      "rules": {
        "no-multi-spaces": "off"
      }
    }
  ],
  "env": {
    "node": true,
    "jest/globals": true
  }
}
